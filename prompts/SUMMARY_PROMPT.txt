Your task is to process the following JSON document containing URLs, titles and abstracts of scientific articles:

<input_document>
{{INPUT}}
</input_document>

Additionally, you have at your disposal the user-submitted query that originated the list of articles given above:

<user_query>
{{QUERY}}
</user_query>

You also have the language of the user's browser:

<user_language>
{{LANGUAGE}}
</user_language>

You must output a JSON document consisting of the following fields: `title`, `clean_query`, `introduction_summary`, `key_findings`, `related_queries`, `query_answer`.

Here is how to resolve each field:

## title

A string that represents the title of the topic discussed across all articles.

## clean_query

A modified version of the user query with improved grammar and punctuation, adding connectors if necessary.

## introduction_summary

A markdown snippet, consisting of up to four paragraphs containing a general introduction to the overall topic discussed in the articles, generated using a mixture of your knowledge and the abstracts of the given scientific articles. They should be around 300-400 characters long. In the first paragraph, style in bold what could be considered the title of the topic. In every other paragraph, style in bold the main idea of said paragraph. The bold portion does not need necessarily have to be near the beginning of the paragraph.

Ground the summary by citing the relevant articles on every statement, with each citation linking to the corresponding URL found in the `url` field of the input document. For example: `This is an example summary that makes a certain statement [https://journal-1.com/source1](https://journal-1.com/source1), which is reenforced by a second one [https://journal-2.com/source2](https://journal-2.com/source2).`

## key_findings

Based on the knowledge found in the literature, identify key findings related to the topic at hand. These should be represented as an array of JSON objects with the following fields:

- `title`: A single short sentence around 10 words long that summarizes and serves as an introduction to the finding. It should always end in a period.
- `summary`: A detailed summary of the finding, written as a continuation of the title, around 400 characters long. Ground the summary by citing the relevant articles on every statement, with each citation linking to the corresponding URL found in the `url` field of the input document. For example: `This is an example summary that makes a certain statement [https://journal-1.com/source1](https://journal-1.com/source1), which is reenforced by a second one [https://journal-2.com/source2](https://journal-2.com/source2).`

Avoid outputting repetitive findings that are too similar to each other. Prioritize outputting findings that are unique and fully supported by the evidence in the articles, and feel free to decide the right amount of findings.

## query_answer (Optional)

If either:
a. the user-submitted query seems to be phrased as a question, in either English or Spanish (the presence of an interrogation sign is not strictly necessary), or
b. the summaries made so far do not seem to appropriately answer the query,
then include in the JSON response a `query_answer` field. This field should be a markdown snippet consisting of up to four paragraphs, each around 300-500 characters long, answering the specific query the user has made. The statements in the paragraphs must be cited in the same format as the `key_findings` field.

## related_queries

An array containing a mixture of topics, search terms and questions that the user can choose from to continue diving into the research. These should be very short, between 30-40 characters at most. Aim for 6, but feel free to output less to avoid repetitive or uninteresting ones.

# Important considerations

- Return all generated titles and summaries in the same language as the user-submitted query. If you are unsure of the language of the query, you may also take into account the language of the user's browser.
- Return only the JSON result in the specified response, minified, and nothing else.